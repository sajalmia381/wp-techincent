"use strict";

$.fn.klTab = function (tabContents) {
  var parent_active = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var activeNav = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'active-tab';
  var activeContent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'active-content';
  var tabItem = this; // active = 'active-tab',
  // activeContent = 'active-content';

  $(tabContents).each(function () {
    /* Hide Content Item Without List active-tab item */
    if (!$(this).hasClass(activeContent)) {
      $(this).not($(tabItem).attr('href')).hide();
    }
  }); // for parent

  if (parent_active) {
    tabItem.each(function () {
      if ($(this).hasClass(activeNav)) {
        $(this).parent().addClass('active-tab-parent');
      }
    });
  } // $(tabItem.attr('href')).show();


  tabItem.on('click', function (e) {
    e.preventDefault();
    var $this = $(this),
        tabContentId = $this.attr('href'); // for parent

    if (parent_active) {
      tabItem.each(function () {
        $(this).parent().removeClass('active-tab-parent');
      });
    }

    if (!$this.hasClass(activeNav)) {
      // tab
      tabItem.removeClass(activeNav);
      $this.addClass(activeNav); // for parent

      if (parent_active) {
        $this.parent().addClass('active-tab-parent');
      } // tab content


      $(tabContents).removeClass(activeContent).hide();
      $(tabContentId).addClass(activeContent).fadeIn('show');
    }
  });
};
/*  ========================== click Toggle fucntion ============================ */


$.fn.klClickToggle = function (content) {
  var fade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var clicker = this;
  var newContent = $(content);
  newContent.slideUp();
  clicker.on('click', function () {
    if (fade == true) {
      newContent.stop().fadeToggle('show');
    } else {
      newContent.stop().slideToggle('show');
    }
  });
};

!function (l) {
  var f = {
    speed: 300,
    offset: 0,
    currentClass: "active",
    updateHash: !1,
    classToParent: !1
  },
      s = {
    init: function init(t, s) {
      f = l.extend(f, t), this.$navbar = l(s), this.$items = this.$navbar.find("a:not(.externals)"), this.$window = l(window), this.hashNow = void 0, this.$items.on("click", this.clicked), this.$window.on("scroll", l.proxy(this.scrollPage, this)), this.$window.on("resize", l.proxy(this.scrollPage, this));
    },
    clicked: function clicked(t) {
      t.preventDefault();
      var s = l(this).attr("href"),
          e = l(s).offset().top - f.offset;
      l("html, body").animate({
        scrollTop: e
      }, f.speed);
    },
    scrollPage: function scrollPage() {
      var t = this,
          e = [],
          s = void 0;
      t.$items.each(function () {
        var t = l(this).attr("href"),
            s = l(t);
        s && e.push(s);
      });

      for (var i = 0; i < e.length; i++) {
        var a = e[i],
            r = a.height(),
            n = a.offset().top,
            o = t.$window.scrollTop(),
            h = t.$window.height();

        if (o <= n && r + n < o + h) {
          s = e[i].attr("id");
          break;
        }
      }

      if (s) {
        if (f.updateHash) {
          var c = "#" + s;
          t.hashNow != c && (t.hashNow = c, history.pushState({}, "", c));
        }

        f.classToParent ? (t.$items.parent().removeClass(f.currentClass), l('a[href="#' + s + '"]').parent().addClass(f.currentClass)) : (t.$items.removeClass(f.currentClass), l('a[href="#' + s + '"]').addClass(f.currentClass));
      }
    }
  };

  l.fn.navpoints = function (t) {
    this.each(function () {
      Object.create(s).init(t, this);
    });
  };
}(jQuery); // jquery.navpoints.min.js.map
"use strict";

var POLLEXE = POLLEXE || {};

var Accordion = function Accordion(el, multiple) {
  this.el = el || {};
  this.multiple = multiple || false;
  $('.dropdownlink-js').parent().addClass('caret-dropdown');
  var dropdownlink = this.el.find('.dropdownlink-js');
  dropdownlink.on('click', {
    el: this.el,
    multiple: this.multiple
  }, this.dropdown);
};

Accordion.prototype.dropdown = function (e) {
  e.preventDefault();
  var $el = e.data.el,
      $this = $(this),
      $next = $this.next();
  $next.slideToggle();
  $this.parent().toggleClass('open');

  if (!e.data.multiple) {
    // Show only one menu at the same time
    $el.find('.submenu-item-js').not($next).slideUp().parent().removeClass('open');
  }
};

(function ($) {
  // USE STRICT
  "use strict";

  POLLEXE.initialize = {
    init: function init() {
      POLLEXE.initialize.general();
      POLLEXE.initialize.mobileMenu();
      POLLEXE.initialize.components();
    },

    /*==================================*/

    /*=           Reuseable Component          =*/

    /*==================================*/
    components: function components() {},

    /*==================================*/

    /*=           General          =*/

    /*==================================*/
    general: function general() {
      $('.kl-pricing__tab-catelog-js li a').klTab('.kl-pricing__tab-js .kl-tab__item');
    },

    /*==================================*/

    /*=           Mobile Menu          =*/

    /*==================================*/
    mobileMenu: function mobileMenu() {
      var accordion = new Accordion($('.kl-mobile-menu-navbar-js'), false);
      $('.kl-mobile-menu-toggler').on('click', function (e) {
        e.preventDefault();
        var mask = '<div class="mask-overlay">';
        $('body').toggleClass('active');
        $(mask).hide().appendTo('body').fadeIn('fast');
        $('.mask-overlay, .kl-mobile-menu__close').on('click', function () {
          $('body').removeClass('active');
          $('.mask-overlay').fadeOut().remove();
        });
      });
    }
  };
  POLLEXE.documentOnReady = {
    init: function init() {
      POLLEXE.initialize.init();
      AOS.init();
    }
  };
  POLLEXE.documentOnLoad = {
    init: function init() {
      $('[data-bg-image]').each(function () {
        var $this = $(this);
        var img = $this.data('bg-image');
        $this.css({
          backgroundImage: 'url(' + img + ')'
        }); // remove attibute .removeAttr('data-bg-image')
      });
      $('[data-bg-color]').each(function () {
        var $this = $(this);
        var color = $this.data('bg-color');
        $this.css({
          backgroundColor: color
        }).removeAttr('data-bg-color');
      }); // Pricing scrolling

      var pricingScrollItem = $('.kl-pricing-item-scroll a');
      pricingScrollItem.on('click', function (e) {
        var $this = $(this);
        pricingScrollItem.removeClass('active');
        $this.addClass('active');
      });
      $('#kl-pricing-item-scroll-js').navpoints({
        offset: 140
      });
    }
  };
  POLLEXE.documentOnResize = {
    init: function init() {}
  };
  var headerNavbarWrap = $('.kl-header--sticky-js'),
      navbarOffsetTop = headerNavbarWrap.offset().top,
      navbarClintHeight = headerNavbarWrap.height();
  var pricingExpiredFilter = $('.kl-pricing-scroll');
  var pricingExpiredFilterOffsetTop, pricingExpiredFilterHeight;

  if (pricingExpiredFilter.length > 0) {
    pricingExpiredFilterOffsetTop = pricingExpiredFilter.offset().top, pricingExpiredFilterHeight = pricingExpiredFilter.height();
  }

  POLLEXE.documentOnScroll = {
    init: function init() {
      var $window = $(window);

      if ($window.scrollTop() > navbarOffsetTop) {
        headerNavbarWrap.addClass('kl-header--fixed'); // make fixed height ".css('height', navbarClintHeight)"
      } else {
        headerNavbarWrap.removeClass('kl-header--fixed');
      }

      if (screen.width > 991) {
        if (pricingExpiredFilter.length > 0) {
          if ($window.scrollTop() + navbarClintHeight > pricingExpiredFilterOffsetTop) {
            pricingExpiredFilter.css('height', pricingExpiredFilterHeight).children().css('top', navbarClintHeight).addClass('kl-fixed-sticky');
          } else {
            pricingExpiredFilter.children().removeClass('kl-fixed-sticky');
          }
        }
      }
    }
  }; // Initialize Functions

  $(document).ready(POLLEXE.documentOnReady.init);
  $(window).on('load', POLLEXE.documentOnLoad.init);
  $(window).on('resize', POLLEXE.documentOnResize.init);
  $(window).on('scroll', POLLEXE.documentOnScroll.init);
})(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
