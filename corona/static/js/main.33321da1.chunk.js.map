{"version":3,"sources":["components/Cards/Cards.module.css","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.jsx","serviceWorker.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Navbar/Navbar.module.css","App.module.css"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","link","margin","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","classes","className","AppBar","Toolbar","Typography","variant","noWrap","href","src","alt","styles","logo","Link","Button","Copyright","align","Date","getFullYear","Cards","data","confirmed","recovered","deaths","lastUpdate","Container","container","Grid","justify","item","xs","md","component","Card","cx","card","infected","CardContent","infectedLabel","gutterBottom","start","end","value","duration","separator","toDateString","recover","recoverLabel","deathsLabel","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","dataModify","map","reportDate","total","date","fetchContries","countries","name","iso3","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","dailyLineChart","length","labels","datasets","label","borderColor","fill","barCountryChart","options","legend","text","showChart","barChart","chartTitle","lineChart","CountryPicker","handleCountryChange","setCountries","FormControl","formGroup","htmlFor","NativeSelect","id","onChange","e","target","select","i","key","App","state","setState","ReactGa","initialize","pageview","window","location","pathname","this","React","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.33321da1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"infectedLabel\":\"Cards_infectedLabel__1dEA6\",\"recover\":\"Cards_recover__2l1NS\",\"recoverLabel\":\"Cards_recoverLabel__wOMzG\",\"deaths\":\"Cards_deaths__Qdjzq\",\"deathsLabel\":\"Cards_deathsLabel__2M8Bs\"};","import React from 'react';\n\nimport { AppBar, Toolbar, Typography, Link, Button } from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nimport styles from './Navbar.module.css';\n// import Logo from '../../images/logo.png'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color='default'>\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            <a href=\"/\"><img src='https://techincent.com/wp-content/uploads/2019/10/techincent-1.png' alt=\"Tech Incent COVID-19\" className={styles.logo} /></a>\n          </Typography>\n          <nav>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"https://techincent.com/blog\" className={classes.link}>\n              Blog\n            </Link>\n          </nav>\n          <Button href=\"http://techincent.com/corona\" color=\"primary\" variant=\"outlined\" className={classes.link}>\n            Corona\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport MuiLink from '@material-ui/core/Link';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <MuiLink color=\"inherit\" href=\"https://techincent.com\">\n        Tech Incent as Corona Update\n      </MuiLink>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}","import React from 'react';\n\nimport { Container, Card, CardContent, Typography, Grid } from '@material-ui/core';\n\nimport Countup from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css'\n\n\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate }}) => {\n    if (!confirmed) {\n        return <div>\n            'Loading...'\n        </div>\n    }\n    return <Container className={styles.container}>\n        <Grid container spacing={3} justify=\"center\">\n            <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n                <CardContent>\n                    <Typography className={styles.infectedLabel} variant='h4'>Infected</Typography>\n                    <Typography variant='h3' gutterBottom>\n                        <Countup start={0} end={confirmed.value} duration={1.5} separator=',' />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant='body2'>Number of active case</Typography>\n                </CardContent>\n            </Grid>\n            <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recover)}>\n                <CardContent>\n                    <Typography variant='h4' className={styles.recoverLabel}>Recovered</Typography>\n                    <Typography variant='h3' gutterBottom>\n                        <Countup start={0} end={recovered.value} duration={1.5} separator=',' />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant='body2'>Number of recoveries</Typography>\n                </CardContent>\n            </Grid>\n            <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n                <CardContent>\n                    <Typography variant='h4' className={styles.deathsLabel}>Deaths</Typography>\n                    <Typography variant='h3' gutterBottom>\n                        <Countup start={0} end={deaths.value} duration={1.5} separator=',' />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant='body2'>Number of Deaths</Typography>\n                </CardContent>\n            </Grid>\n        </Grid>\n    </Container>\n}\n\nexport default Cards","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\n\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n    if (country){\n        changeableUrl = `${url}/countries/${country}`\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl)\n        return { confirmed, recovered, deaths, lastUpdate }\n    } catch(error) {\n        console.log('api error', error)\n    }\n}\n\n\nexport const fetchDailyData = async () => {\n    try{\n        const { data } = await axios.get(`${url}/daily`);\n        console.log(data)\n        const dataModify = data.map(({confirmed, deaths, reportDate}) => ({\n            confirmed: confirmed.total,\n            deaths: deaths.total,\n            date: reportDate,\n        }))\n        return dataModify\n    } catch (error) {\n\n    }\n}\n\nexport const fetchContries = async () => {\n    const {data: {countries}} = await axios.get(`${url}/countries`)\n    return countries.map(({name, iso3}) => ({name,iso3}))\n}","import React, {useState, useEffect} from 'react';\n\nimport { fetchDailyData } from '../../api';\n\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Container } from '@material-ui/core';\nimport styles from './Chart.module.css';\n\n\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [ dailyData, setDailyData ] = useState([])\n    \n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData())\n        }\n        fetchAPI()\n    }, [])\n    const dailyLineChart = (\n        dailyData.length !== 0 \n        ? <Line \n        data={{\n            labels: dailyData.map(({date}) => date),\n            datasets: [\n                {\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true\n                },\n                {\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'rgba(255, 0, 0, .5)',\n                    fill: true\n\n                }\n            ]\n        }}\n        /> : null\n    )\n    const barCountryChart = (\n        confirmed\n        ? <Bar \n            data={{\n                labels: ['Infected', 'Recoveries', 'Deaths'],\n                datasets: [{\n                    label: 'People',\n                    backgroundColor: ['rgba(0, 0, 225, .5)', 'rgba(0, 225, 0, .5)', 'rgba(225, 0, 0, .5)'],\n                    data: [confirmed.value, recovered.value, deaths.value]\n                }]\n            }}\n            options ={{\n                legend: {display: false},\n                title: {display: true, text: `Current state in ${country}`}\n            }}\n        /> : null\n    )\n    const showChart = (\n        country ? (\n            <div className={styles.barChart}>\n                <h3 className={styles.chartTitle}>Data of {country}</h3>\n                {barCountryChart}\n            </div>\n        ) : <div className={styles.lineChart}>\n            <h3 className={styles.chartTitle}>Daily COVID 2019 Data</h3>\n            {dailyLineChart}\n        </div>\n    ) \n\n    return <Container>\n        <div className={styles.container}>\n            {showChart}\n            \n        </div>\n    </Container>\n}\n\nexport default Chart","import React, {useState, useEffect} from 'react';\nimport {Container, FormControl, NativeSelect} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport {fetchContries} from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [countries, setCountries] = useState([])\n        \n    useEffect(() => {\n        const fetchAPI = async () => {\n            setCountries(await fetchContries())\n        }\n        fetchAPI()\n    }, [setCountries])\n    return <Container className={styles.container}>\n        <FormControl className={styles.formGroup}>\n            <label htmlFor=\"countryChanger\">Filter by Countries</label>\n            <NativeSelect id=\"countryChanger\" onChange={(e) => {handleCountryChange(e.target.value)}} className={styles.select}>\n                <option value=''>Global</option>\n                {countries.map(({name, iso3}, i) => <option key={i} value={name}>{name}</option>)}\n            </NativeSelect>\n        </FormControl>\n    </Container>\n}\n\nexport default CountryPicker","import React from 'react';\n\nimport ReactGa from 'react-ga';\nimport { Navbar, Cards, Chart, CountryPicker, Footer } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\n\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: ''\n  }\n\n  async componentDidMount(){\n    ReactGa.initialize('UA-144995697-1');\n    ReactGa.pageview(window.location.pathname + window.location.search)\n    let data = await fetchData()\n    this.setState({data: data})\n  }\n  handleCountryChange = async (country) => {\n    let data = await fetchData(country)\n    this.setState({data: data, country: country})\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return <div className={styles.container}>\n        <Navbar/>\n        <Cards data={data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Chart data={data} country={country}/>\n        <Footer/>\n    </div>\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\",\"chartTitle\":\"Chart_chartTitle__k7vUa\",\"lineChart\":\"Chart_lineChart__3AWK9\",\"barChart\":\"Chart_barChart__3Z_5H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2vyxG\",\"select\":\"CountryPicker_select__2BqZV\",\"formGroup\":\"CountryPicker_formGroup__1qJvx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Navbar_logo__1H3m4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}